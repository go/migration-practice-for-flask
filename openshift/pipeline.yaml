apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: apply-manifests
spec:
  workspaces:
  - name: source
  params:
    - name: script
      description: The OpenShift CLI arguments to run
      type: string
      default: "oc $@"
    - name: image
      type: string
      default: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
  steps:
    - name: apply
      image: "$(params.image)"
      script: "$(params.script)"
      workingDir: /workspace/source
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy-pipeline
spec:
  workspaces: 
    - name: shared-workspace
  params:
    - name: git-url
      type: string
    - name: git-revision
      type: string
      default: "main"
    - name: image
      type: string
    - name: image-tag
      type: string
      default: "latest"
    - name: context
      type: string
      default: "."
    - name: manifest-dir
      type: string
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.git-revision)
    - name: build-push-image
      taskRef:
        name: s2i-python
        kind: ClusterTask
      params:
        - name: IMAGE
          value: $(params.image):$(params.image-tag)
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - fetch-repository
    - name: deploy-application
      taskRef:
        name: apply-manifests
      params:
        - name: script
          value: |
            cd $(workspaces.source.path)
            # 参考用出力: image-digestが前のTaskで生成されていることを確認
            ls -l
            # 参考用出力: image-digestを確認
            cat image-digest
            # テンプレートを展開してデプロイ
            oc process -f $(params.context)/$(params.manifest-dir) \
              -p APP_IMAGE=$(params.image) \
              -p APP_IMAGE_DIGEST=`cat image-digest` \
              | oc apply -f -
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - build-push-image
